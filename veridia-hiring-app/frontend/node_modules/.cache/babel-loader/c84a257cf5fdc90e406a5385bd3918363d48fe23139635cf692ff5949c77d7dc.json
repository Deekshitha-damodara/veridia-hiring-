{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deekshitha\\\\OneDrive\\\\Desktop\\\\veridia-hiring-app (1)\\\\veridia-hiring-app\\\\frontend\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getAllUsers } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AdminDashboard({\n  navigate\n}) {\n  _s();\n  const [users, setUsers] = useState([]);\n  const admin = JSON.parse(localStorage.getItem(\"user\"));\n  useEffect(() => {\n    if (!admin || admin.email !== \"admin@veridia.com\") {\n      navigate(\"/login\");\n      return;\n    }\n    const fetchUsers = async () => {\n      const data = await getAllUsers();\n      setUsers(data);\n    };\n    fetchUsers();\n  }, [admin, navigate]);\n  const updateStatus = async (userId, appIndex, status) => {\n    try {\n      const res = await fetch(`http://localhost:5000/users/${userId}/application/${appIndex}/status`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          status\n        })\n      });\n      const result = await res.json();\n      if (result.success) {\n        alert(result.message);\n        // Refresh users\n        const data = await getAllUsers();\n        setUsers(data);\n      }\n    } catch (err) {\n      alert(\"Error: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid gray\",\n        padding: \"10px\",\n        margin: \"10px 0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [user.name, \" (\", user.email, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Applications:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), user.applications && user.applications.length > 0 ? user.applications.map((app, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px dashed gray\",\n          padding: \"5px\",\n          marginBottom: \"5px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(app, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", app.status || \"Pending\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateStatus(user._id, i, \"Accepted\"),\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateStatus(user._id, i, \"Rejected\"),\n          children: \"Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No applications submitted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, user._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","getAllUsers","jsxDEV","_jsxDEV","AdminDashboard","navigate","_s","users","setUsers","admin","JSON","parse","localStorage","getItem","email","fetchUsers","data","updateStatus","userId","appIndex","status","res","fetch","method","headers","body","stringify","result","json","success","alert","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","style","border","padding","margin","name","applications","length","app","i","marginBottom","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Users/Deekshitha/OneDrive/Desktop/veridia-hiring-app (1)/veridia-hiring-app/frontend/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getAllUsers } from \"../api\";\n\nexport function AdminDashboard({ navigate }) {\n  const [users, setUsers] = useState([]);\n  const admin = JSON.parse(localStorage.getItem(\"user\"));\n\n  useEffect(() => {\n    if (!admin || admin.email !== \"admin@veridia.com\") {\n      navigate(\"/login\");\n      return;\n    }\n\n    const fetchUsers = async () => {\n      const data = await getAllUsers();\n      setUsers(data);\n    };\n    fetchUsers();\n  }, [admin, navigate]);\n\n  const updateStatus = async (userId, appIndex, status) => {\n    try {\n      const res = await fetch(`http://localhost:5000/users/${userId}/application/${appIndex}/status`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ status })\n      });\n      const result = await res.json();\n      if (result.success) {\n        alert(result.message);\n        // Refresh users\n        const data = await getAllUsers();\n        setUsers(data);\n      }\n    } catch (err) {\n      alert(\"Error: \" + err.message);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Admin Dashboard</h1>\n      {users.map((user) => (\n        <div key={user._id} style={{ border: \"1px solid gray\", padding: \"10px\", margin: \"10px 0\" }}>\n          <h3>{user.name} ({user.email})</h3>\n          <h4>Applications:</h4>\n          {user.applications && user.applications.length > 0 ? (\n            user.applications.map((app, i) => (\n              <div key={i} style={{ border: \"1px dashed gray\", padding: \"5px\", marginBottom: \"5px\" }}>\n                <pre>{JSON.stringify(app, null, 2)}</pre>\n                <p>Status: {app.status || \"Pending\"}</p>\n                <button onClick={() => updateStatus(user._id, i, \"Accepted\")}>Accept</button>\n                <button onClick={() => updateStatus(user._id, i, \"Rejected\")}>Reject</button>\n              </div>\n            ))\n          ) : (\n            <p>No applications submitted</p>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}